/**
 * This code was generated by "react-native codegen-harmony"
 *
 * Do not edit this file as changes may cause incorrect behavior and will be
 * lost once the code is regenerated.
 *
 * @generatorVersion: 1
 */
#pragma once

#include "RNOH/Package.h"
#include "NoCodegenSampleViewArkTSComponentDescriptor.h"
#include "NoCodegenSampleViewArkTSJSIBinder.h"

namespace rnoh {

class SampleViewEventEmitRequestHandler : public EventEmitRequestHandler {
public:
    void handleEvent(Context const &ctx) override {
        auto eventEmitter = ctx.shadowViewRegistry->getEventEmitter<facebook::react::EventEmitter>(ctx.tag);
        if (eventEmitter == nullptr) {
            return;
        }

        std::vector<std::string> supportedEventNames = {
            "directEvent",
            "bubblingEvent",
        };
        if (std::find(supportedEventNames.begin(), supportedEventNames.end(), ctx.eventName) !=
            supportedEventNames.end()) {
            eventEmitter->dispatchEvent(ctx.eventName, ArkJS(ctx.env).getDynamic(ctx.payload));
        }
    }
};

class NoCodegenArkTSSamplePackage : public Package {
public:
    NoCodegenArkTSSamplePackage(Package::Context ctx) : Package(ctx){};

    std::vector<facebook::react::ComponentDescriptorProvider> createComponentDescriptorProviders() override {
        return {
            facebook::react::concreteComponentDescriptorProvider<
                facebook::react::NoCodegenSampleViewArkTSComponentDescriptor>(),
        };
    }

    ComponentJSIBinderByString createComponentJSIBinderByName() override {
        return {
            {"NoCodegenSampleViewArkTS", std::make_shared<NoCodegenSampleViewArkTSJSIBinder>()},
        };
    };

    EventEmitRequestHandlers createEventEmitRequestHandlers() override {
        return {
            std::make_shared<SampleViewEventEmitRequestHandler>(),
        };
    }
};

} // namespace rnoh
